#%Module
module-alias hide3/al1 hide3/sub2
module-alias hide3/al2 hide3/sub2/5.0
module-version hide3/sub1 default
module-version hide3/sub2 sym

if {[info exists env(TESTSUITE_HIDE3_SET1)]} {
    module-hide hide3
}
# test cascading definition with big match in global rc file and sub match here
if {[info exists env(TESTSUITE_HIDE3_SET2)]} {
    module-hide hide3/sub2@new
}

# module-hide --soft tests
if {[info exists env(TESTSUITE_HIDE3_SOFT_SET1)]} {
    module-hide --soft hide3
}
if {[info exists env(TESTSUITE_HIDE3_SOFT_SET2)]} {
    module-hide --soft hide3/sub2@new
}


# 20/115 module-forbid tests
if {[info exists env(TESTSUITE_FORBID3_SET1)]} {
    module-forbid hide3
    module-hide --hard hide3
}


# 20/111 module-hide --hard tests
if {[info exists env(TESTSUITE_HIDE3_HARD_SET1)]} {
    module-hide --hard hide3
}
# test cascading definition with big match in global rc file and sub match here
if {[info exists env(TESTSUITE_HIDE3_HARD_SET2)]} {
    module-hide --hard hide3/sub2@new
}


# 20/115 module-forbid tests over different kind of elements
# and coupled to different kind of module-hide command
if {[info exists env(TESTSUITE_FORBID3_SET2)]} {
    module-forbid hide3/1.0 hide3/sub1 hide3/al2 hide3/sub2/new
}
if {[info exists env(TESTSUITE_FORBID3_SET3)]} {
    module-forbid hide3/1.0 hide3/sub1 hide3/al2 hide3/sub2/new
    module-hide --soft hide3/1.0 hide3/sub1 hide3/al2 hide3/sub2/new
}
if {[info exists env(TESTSUITE_FORBID3_SET4)]} {
    module-forbid hide3/1.0 hide3/sub1 hide3/al2 hide3/sub2/new
    module-hide hide3/1.0 hide3/sub1 hide3/al2 hide3/sub2/new
}


# 20/112 module-hide --hidden-loaded tests
if {[info exists env(TESTSUITE_HIDE3_HIDDEN_LOADED_SET1)]} {
    module-hide --hidden-loaded hide3
}
if {[info exists env(TESTSUITE_HIDE3_HIDDEN_LOADED_SET2)]} {
    module-hide --soft --hidden-loaded hide3
}
